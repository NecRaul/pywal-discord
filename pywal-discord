#!/bin/bash

XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"

theme="default"
system_theme_dir="/usr/share/pywal-discord"
user_theme_dir="$XDG_CONFIG_HOME/pywal-discord-themes"
output_override=""
create_dirs=false

if [[ "$(uname -s)" == Darwin* ]]; then
    system_theme_dir="$XDG_CONFIG_HOME/pywal-discord"
fi

print_usage() {
    echo "Usage: $0 [-t theme] [-p path] [-d] [-h]"
    echo "-t theme      Theme variant: [default, abou]"
    echo "-p path       Override output path (single target only)"
    echo "-d            Create missing theme directories"
    echo "-h            Show this help message"
}

while getopts 'dt:p:h' flag; do
    case "${flag}" in
    d) create_dirs=true ;;
    t) theme="${OPTARG}" ;;
    p) output_override="${OPTARG}" ;;
    h)
        print_usage
        exit 0
        ;;
    *)
        print_usage
        exit 1
        ;;
    esac
done

# Theme source file
mkdir -p "$user_theme_dir"
theme_file="$user_theme_dir/pywal-discord-$theme.css"
[[ ! -f "$theme_file" ]] && theme_file="$system_theme_dir/pywal-discord-$theme.css"
if [ ! -f "$theme_file" ]; then
    echo "‚ùå Theme template not found: $theme_file"
    exit 1
fi

# Build header/meta and body
meta_file="/tmp/pywal-discord-meta"
body_file="/tmp/pywal-discord-body.css"
sed "s/@name Pywal-Discord/@name Pywal-Discord-$theme/" "$system_theme_dir/meta.css" >"$meta_file"
cat "$XDG_CACHE_HOME/wal/colors.css" "$theme_file" >"$body_file"

# Output logic
write_theme_to_dir() {
    local target_dir="$1"
    mkdir -p "$target_dir"
    local theme_file="$target_dir/pywal-discord-$theme.theme.css"
    cat "$meta_file" "$body_file" >"$theme_file"

    if [[ -f "$theme_file" ]]; then
        echo "‚úÖ Theme written to: $theme_file"
    else
        echo "‚ùå Failed to write theme to: $theme_file"
    fi
}

if [ -n "$output_override" ]; then
    # Case 1: custom path given
    if [ ! -d "$output_override" ] && [ "$create_dirs" = false ]; then
        echo "‚ö†Ô∏è Path does not exist: $output_override"
        echo "Use -d to create it."
        exit 1
    fi
    write_theme_to_dir "$output_override"
else
    # Case 2: Auto-detect and write to known Discord client theme directories
    declare -A client_theme_dirs=(
        ["BetterDiscord"]="$XDG_CONFIG_HOME/BetterDiscord/themes"
        ["Vencord"]="$XDG_CONFIG_HOME/Vencord/themes"
        ["Vesktop"]="$XDG_CONFIG_HOME/vesktop/themes"
    )
    for client_name in "${!client_theme_dirs[@]}"; do
        target_dir="${client_theme_dirs[$client_name]}"
        if [[ -d "$target_dir" ]]; then
            write_theme_to_dir "$target_dir"
        elif [[ "$create_dirs" = true ]]; then
            echo "üìÅ Creating directory: $target_dir"
            write_theme_to_dir "$target_dir"
        else
            echo "‚ö†Ô∏è Skipping $client_name ‚Äî directory does not exist. Use -d to create."
        fi
    done
fi
