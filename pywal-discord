#!/bin/bash

XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"

theme="default"
config="/usr/share/pywal-discord"
usrconfig="$XDG_CONFIG_HOME/pywal-discord-themes"
custom_path=""
create_dirs=false

if [[ "$(uname -s)" == Darwin* ]]; then
    config="$XDG_CONFIG_HOME/pywal-discord"
fi

print_usage() {
    echo "Usage: $0 [-t theme] [-p path] [-d] [-h]"
    echo "-t theme      Theme variant: [default, abou]"
    echo "-p path       Override output path (single target only)"
    echo "-d            Create missing theme directories"
    echo "-h            Show this help message"
}

while getopts 'dt:p:h' flag; do
    case "${flag}" in
    d) create_dirs=true ;;
    t) theme="${OPTARG}" ;;
    p) custom_path="${OPTARG}" ;;
    h)
        print_usage
        exit 0
        ;;
    *)
        print_usage
        exit 1
        ;;
    esac
done

# Theme source file
themefile="$usrconfig/pywal-discord-$theme.css"
if [ ! -f "$themefile" ]; then
    themefile="$config/pywal-discord-$theme.css"
fi

if [ ! -f "$themefile" ]; then
    echo "‚ùå Theme template not found: $themefile"
    exit 1
fi

# Build header/meta and body
metafile="/tmp/pywal-discord-meta"
bodyfile="/tmp/pywal-discord-body.css"
sed "s/@name Pywal-Discord/@name Pywal-Discord-$theme/" "$config/meta.css" >"$metafile"
cat "$XDG_CACHE_HOME/wal/colors.css" "$themefile" >"$bodyfile"

# Output logic
write_theme() {
    local path="$1"
    mkdir -p "$path"
    local file="$path/pywal-discord-$theme.theme.css"
    cat "$metafile" "$bodyfile" >"$file"

    if [ -f "$file" ]; then
        echo "‚úÖ Theme written to: $file"
    else
        echo "‚ùå Failed to write theme to: $file"
    fi
}

if [ -n "$custom_path" ]; then
    # Case 1: custom path given
    if [ ! -d "$custom_path" ] && [ "$create_dirs" = false ]; then
        echo "‚ö†Ô∏è Path does not exist: $custom_path"
        echo "Use -d to create it."
        exit 1
    fi
    write_theme "$custom_path"
else
    # Case 2: auto-detect and write to both if they exist
    declare -A targets=(
        ["BetterDiscord"]="$XDG_CONFIG_HOME/BetterDiscord/themes"
        ["Vencord"]="$XDG_CONFIG_HOME/Vencord/themes"
        ["Vesktop"]="$XDG_CONFIG_HOME/vesktop/themes"
    )
    for name in "${!targets[@]}"; do
        path="${targets[$name]}"
        if [ -d "$path" ]; then
            write_theme "$path"
        elif [ "$create_dirs" = true ]; then
            echo "üìÅ Creating directory: $path"
            write_theme "$path"
        else
            echo "‚ö†Ô∏è Skipping $name ‚Äî directory does not exist. Use -d to create."
        fi
    done
fi
